// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using astroProject_service.Entities;

#nullable disable

namespace astroProject_service.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241229194407_TarotCard2")]
    partial class TarotCard2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("astroProject_service.Entities.EnumModels.LifeAspectEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("Id");

                    b.ToTable("LifeAspect");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Love"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Career"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Health"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Money"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Family"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Friends"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Travel"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Education"
                        },
                        new
                        {
                            Id = 9,
                            Description = "SocialLife"
                        });
                });

            modelBuilder.Entity("astroProject_service.Entities.EnumModels.MembershipEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("Id");

                    b.ToTable("Membership");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Free"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Premium"
                        });
                });

            modelBuilder.Entity("astroProject_service.Entities.EnumModels.RelationshipEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("Id");

                    b.ToTable("Relationship");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Single"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Married"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Widow"
                        },
                        new
                        {
                            Id = 4,
                            Description = "In a relationship"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Divorced"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Engaged"
                        });
                });

            modelBuilder.Entity("astroProject_service.Entities.EnumModels.TarotCardEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("Id");

                    b.ToTable("TarotCard");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The Fool"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The Magician"
                        },
                        new
                        {
                            Id = 3,
                            Description = "The High Priestess"
                        },
                        new
                        {
                            Id = 4,
                            Description = "The Empress"
                        },
                        new
                        {
                            Id = 5,
                            Description = "The Emperor"
                        },
                        new
                        {
                            Id = 6,
                            Description = "The Hierophant"
                        },
                        new
                        {
                            Id = 7,
                            Description = "The Lovers"
                        },
                        new
                        {
                            Id = 8,
                            Description = "The Chariot"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Strength"
                        },
                        new
                        {
                            Id = 10,
                            Description = "The Hermit"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Wheel of Fortune"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Justice"
                        },
                        new
                        {
                            Id = 13,
                            Description = "The Hanged Man"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Death"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Temperance"
                        },
                        new
                        {
                            Id = 16,
                            Description = "The Devil"
                        },
                        new
                        {
                            Id = 17,
                            Description = "The Tower"
                        },
                        new
                        {
                            Id = 18,
                            Description = "The Star"
                        },
                        new
                        {
                            Id = 19,
                            Description = "The Moon"
                        },
                        new
                        {
                            Id = 20,
                            Description = "The Sun"
                        },
                        new
                        {
                            Id = 21,
                            Description = "Judgement"
                        },
                        new
                        {
                            Id = 22,
                            Description = "The World"
                        },
                        new
                        {
                            Id = 23,
                            Description = "Ace of Cups"
                        },
                        new
                        {
                            Id = 24,
                            Description = "Two of Cups"
                        },
                        new
                        {
                            Id = 25,
                            Description = "Three of Cups"
                        },
                        new
                        {
                            Id = 26,
                            Description = "Four of Cups"
                        },
                        new
                        {
                            Id = 27,
                            Description = "Five of Cups"
                        },
                        new
                        {
                            Id = 28,
                            Description = "Six of Cups"
                        },
                        new
                        {
                            Id = 29,
                            Description = "Seven of Cups"
                        },
                        new
                        {
                            Id = 30,
                            Description = "Eight of Cups"
                        },
                        new
                        {
                            Id = 31,
                            Description = "Nine of Cups"
                        },
                        new
                        {
                            Id = 32,
                            Description = "Ten of Cups"
                        },
                        new
                        {
                            Id = 33,
                            Description = "Page of Cups"
                        },
                        new
                        {
                            Id = 34,
                            Description = "Knight of Cups"
                        },
                        new
                        {
                            Id = 35,
                            Description = "Queen of Cups"
                        },
                        new
                        {
                            Id = 36,
                            Description = "King of Cups"
                        },
                        new
                        {
                            Id = 37,
                            Description = "Ace of Wands"
                        },
                        new
                        {
                            Id = 38,
                            Description = "Two of Wands"
                        },
                        new
                        {
                            Id = 39,
                            Description = "Three of Wands"
                        },
                        new
                        {
                            Id = 40,
                            Description = "Four of Wands"
                        },
                        new
                        {
                            Id = 41,
                            Description = "Five of Wands"
                        },
                        new
                        {
                            Id = 42,
                            Description = "Six of Wands"
                        },
                        new
                        {
                            Id = 43,
                            Description = "Seven of Wands"
                        },
                        new
                        {
                            Id = 44,
                            Description = "Eight of Wands"
                        },
                        new
                        {
                            Id = 45,
                            Description = "Nine of Wands"
                        },
                        new
                        {
                            Id = 46,
                            Description = "Ten of Wands"
                        },
                        new
                        {
                            Id = 47,
                            Description = "Page of Wands"
                        },
                        new
                        {
                            Id = 48,
                            Description = "Knight of Wands"
                        },
                        new
                        {
                            Id = 49,
                            Description = "Queen of Wands"
                        },
                        new
                        {
                            Id = 50,
                            Description = "King of Wands"
                        },
                        new
                        {
                            Id = 51,
                            Description = "Ace of Swords"
                        },
                        new
                        {
                            Id = 52,
                            Description = "Two of Swords"
                        },
                        new
                        {
                            Id = 53,
                            Description = "Three of Swords"
                        },
                        new
                        {
                            Id = 54,
                            Description = "Four of Swords"
                        },
                        new
                        {
                            Id = 55,
                            Description = "Five of Swords"
                        },
                        new
                        {
                            Id = 56,
                            Description = "Six of Swords"
                        },
                        new
                        {
                            Id = 57,
                            Description = "Seven of Swords"
                        },
                        new
                        {
                            Id = 58,
                            Description = "Eight of Swords"
                        },
                        new
                        {
                            Id = 59,
                            Description = "Nine of Swords"
                        },
                        new
                        {
                            Id = 60,
                            Description = "Ten of Swords"
                        },
                        new
                        {
                            Id = 61,
                            Description = "Page of Swords"
                        },
                        new
                        {
                            Id = 62,
                            Description = "Knight of Swords"
                        },
                        new
                        {
                            Id = 63,
                            Description = "Queen of Swords"
                        },
                        new
                        {
                            Id = 64,
                            Description = "King of Swords"
                        },
                        new
                        {
                            Id = 65,
                            Description = "Ace of Pentacles"
                        },
                        new
                        {
                            Id = 66,
                            Description = "Two of Pentacles"
                        },
                        new
                        {
                            Id = 67,
                            Description = "Three of Pentacles"
                        },
                        new
                        {
                            Id = 68,
                            Description = "Four of Pentacles"
                        },
                        new
                        {
                            Id = 69,
                            Description = "Five of Pentacles"
                        },
                        new
                        {
                            Id = 70,
                            Description = "Six of Pentacles"
                        },
                        new
                        {
                            Id = 71,
                            Description = "Seven of Pentacles"
                        },
                        new
                        {
                            Id = 72,
                            Description = "Eight of Pentacles"
                        },
                        new
                        {
                            Id = 73,
                            Description = "Nine of Pentacles"
                        },
                        new
                        {
                            Id = 74,
                            Description = "Ten of Pentacles"
                        },
                        new
                        {
                            Id = 75,
                            Description = "Page of Pentacles"
                        },
                        new
                        {
                            Id = 76,
                            Description = "Knight of Pentacles"
                        },
                        new
                        {
                            Id = 77,
                            Description = "Queen of Pentacles"
                        },
                        new
                        {
                            Id = 78,
                            Description = "King of Pentacles"
                        });
                });

            modelBuilder.Entity("astroProject_service.Entities.EnumModels.ZodiacEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("Id");

                    b.ToTable("Zodiac");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Aries"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Taurus"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Gemini"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Cancer"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Leo"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Virgo"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Libra"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Scorpio"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Sagittarius"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Capricorn"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Aquarius"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Pisces"
                        });
                });

            modelBuilder.Entity("astroProject_service.Entities.UserModels.Profile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Occupation")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int?>("RelationshipType")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int?>("Zodiac")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("astroProject_service.Entities.UserModels.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int>("MembershipType")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .HasColumnType("VARCHAR(256)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("VARCHAR(12)");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("astroProject_service.Entities.ZodiacSignStream", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Catagory")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(2500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("ZodiacSignStream");
                });

            modelBuilder.Entity("astroProject_service.Entities.UserModels.Profile", b =>
                {
                    b.HasOne("astroProject_service.Entities.UserModels.User", "User")
                        .WithMany("Profiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("astroProject_service.Entities.UserModels.User", b =>
                {
                    b.Navigation("Profiles");
                });
#pragma warning restore 612, 618
        }
    }
}
