// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using astroProject_service.Entities;

#nullable disable

namespace astroProject_service.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241229185855_Zodiac-Enum-Added")]
    partial class ZodiacEnumAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("astroProject_service.Entities.EnumModels.MembershipEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("Id");

                    b.ToTable("Membership");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Free"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Premium"
                        });
                });

            modelBuilder.Entity("astroProject_service.Entities.EnumModels.RelationshipEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("Id");

                    b.ToTable("Relationship");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Single"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Married"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Widow"
                        },
                        new
                        {
                            Id = 4,
                            Description = "In a relationship"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Divorced"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Engaged"
                        });
                });

            modelBuilder.Entity("astroProject_service.Entities.EnumModels.ZodiacEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("Id");

                    b.ToTable("Zodiac");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Aries"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Taurus"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Gemini"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Cancer"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Leo"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Virgo"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Libra"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Scorpio"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Sagittarius"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Capricorn"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Aquarius"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Pisces"
                        });
                });

            modelBuilder.Entity("astroProject_service.Entities.TarotCard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("Id");

                    b.ToTable("TarotCard");
                });

            modelBuilder.Entity("astroProject_service.Entities.UserModels.Profile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Occupation")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int?>("RelationshipType")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int?>("Zodiac")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("astroProject_service.Entities.UserModels.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int>("MembershipType")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .HasColumnType("VARCHAR(256)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("VARCHAR(12)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("astroProject_service.Entities.ZodiacSignStream", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Catagory")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("ZodiacSignStream");
                });

            modelBuilder.Entity("astroProject_service.Entities.UserModels.Profile", b =>
                {
                    b.HasOne("astroProject_service.Entities.UserModels.User", "User")
                        .WithMany("Profiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("astroProject_service.Entities.UserModels.User", b =>
                {
                    b.Navigation("Profiles");
                });
#pragma warning restore 612, 618
        }
    }
}
